type AppActionEvent = string | HTMLElement | object
type AppFormChangeEvent = AppFormData
type AppFormCloseEvent = void
type AppFormData = { formValid: boolean } & Record<string, AppFormDataValue>
type AppFormDataValue = string | boolean | number | string[]
type AppFormEditItemChangeEvent = FormEditFormData
type AppFormEditItemSaveEvent = Item
type AppFormEditItemSetEvent = Item
type AppFormEditItemSuggestionsEvent = FormSuggestions
type AppFormPrintOneChangeEvent = PrintFormData
type AppFormPrintOneReadyEvent = PrintFormData
type AppFormReadyEvent = AppFormData
type AppFormSettingsErrorEvent = string
type AppFormSettingsReadyEvent = void
type AppFormSettingsSaveEvent = AppSettings
type AppFormSettingsSetEvent = AppSettings
type AppLoaderToggleEvent = boolean
type AppModalAddItemCloseEvent = void
type AppModalAddItemOpenEvent = HTMLElement
type AppModalCloseEvent = void
type AppModalEditItemCloseEvent = void
type AppModalEditItemOpenEvent = void
type AppModalOpenEvent = void
type AppModalPrepareBarcodesOpenEvent = void
type AppModalPrintOneCloseEvent = void
type AppModalPrintOneOpenEvent = PrintInputData
type AppModalReadyEvent = void
type AppModalScanCodeCloseEvent = void
type AppModalScanCodeOpenEvent = void
type AppModalSearchResultsCloseEvent = void
type AppModalSearchResultsOpenEvent = void
type AppModalSettingsCloseEvent = void
type AppModalSettingsOpenEvent = void
type AppPrompterTypeEvent = TypicalArguments
type AppScanCodeStartEvent = void
type AppSearchItemEvent = AppFormData
type AppSettingsTriggerAnimateEvent = boolean
type AppSoundErrorEvent = void
type AppSoundInfoEvent = void
type AppSoundSuccessEvent = void
type AppSpeechStartEvent = void
type AppSpeechStartEvent = void
type AppStatus = 'loading' | 'ready' | 'failed' | 'listening' | 'settings-required'
type AppStatusEvent = AppStatus
type AppToasterShowEvent = { type: 'error' | 'success' | 'info'; message: string; delay?: number }
type BarcodesToPrintEvent = Item[]
type DoPrintOneEvent = PrintInputData
type EditItemEvent = Item
type FormEditFormData = Item & AppFormData
type FormIdErrorEvent = string
type FormIdSetEvent = AppFormData
type FormIdSuggestionsEvent = FormSuggestions
type FormOnSaveEvent = AppFormData
type FormSuggestions = Record<string, string[]>
type ItemsReadyEvent = void
type PrintOneEvent = PrintInputData
type RecognitionErrorEvent = { error: string }
type RecognitionResult = { confidence: number; transcript: string }
type RecognitionResultEvent = { results: RecognitionResult[][] }
type SearchOrigin = 'default' | 'type' | 'scan' | 'search-results' | 'speech' | 'url'
type SearchResultsEvent = { byReference: boolean; input: string; results: SearchResult[]; scrollTop: boolean; title: string }
type SearchRetryEvent = void
type SearchStartEvent = { origin: SearchOrigin; scrollTop?: boolean; str: string }
type SelectResultEvent = string // the id of the selected item
