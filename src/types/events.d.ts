type AppActionEvent = string | HTMLElement | object
type AppFormChangeEvent = AppFormData
type AppFormCloseEvent = undefined
type AppFormData = { formValid: boolean } & Record<string, AppFormDataValue>
type AppFormDataValue = string | boolean | number | string[]
type AppFormEditItemChangeEvent = FormEditFormData
type AppFormEditItemSaveEvent = Item
type AppFormEditItemSetEvent = Item
type AppFormEditItemSuggestionsEvent = FormSuggestions
type AppFormPrintOneChangeEvent = PrintFormData
type AppFormPrintOneReadyEvent = PrintFormData
type AppFormReadyEvent = AppFormData
type AppFormSettingsErrorEvent = string
type AppFormSettingsReadyEvent = undefined
type AppFormSettingsSaveEvent = AppSettings
type AppFormSettingsSetEvent = AppSettings
type AppLoaderToggleEvent = boolean
type AppModalAddItemCloseEvent = undefined
type AppModalAddItemOpenEvent = HTMLElement
type AppModalCloseEvent = undefined
type AppModalEditItemCloseEvent = undefined
type AppModalEditItemOpenEvent = undefined
type AppModalOpenEvent = undefined
type AppModalPrepareBarcodesOpenEvent = undefined
type AppModalPrintOneCloseEvent = undefined
type AppModalPrintOneOpenEvent = PrintInputData
type AppModalReadyEvent = undefined
type AppModalScanCodeCloseEvent = undefined
type AppModalScanCodeOpenEvent = undefined
type AppModalSearchResultsCloseEvent = undefined
type AppModalSearchResultsOpenEvent = undefined
type AppModalSettingsCloseEvent = undefined
type AppModalSettingsOpenEvent = undefined
type AppPrompterTypeEvent = TypicalArguments
type AppScanCodeStartEvent = undefined
type AppSearchItemEvent = AppFormData
type AppSettingsTriggerAnimateEvent = boolean
type AppSoundErrorEvent = undefined
type AppSoundInfoEvent = undefined
type AppSoundSuccessEvent = undefined
type AppSpeechStartEvent = undefined
type AppSpeechStartEvent = undefined
type AppStatus = 'loading' | 'ready' | 'failed' | 'listening' | 'settings-required' | 'unexpected-error'
type AppStatusEvent = AppStatus
type AppToasterShowEvent = { type: 'error' | 'success' | 'info'; message: string; delay?: number }
type BarcodesToPrintEvent = Item[]
type DoPrintOneEvent = PrintInputData
type EditItemEvent = Item
type FormEditFormData = Item & AppFormData
type FormIdErrorEvent = string
type FormIdSetEvent = AppFormData
type FormIdSuggestionsEvent = FormSuggestions
type FormOnSaveEvent = AppFormData
type FormSuggestions = Record<string, string[]>
type ItemsReadyEvent = undefined
type PrintOneEvent = PrintInputData
type RecognitionErrorEvent = { error: string }
type RecognitionResult = { confidence: number; transcript: string }
type RecognitionResultEvent = { results: RecognitionResult[][] }
type SearchOrigin = 'default' | 'type' | 'scan' | 'search-results' | 'speech' | 'url'
type SearchResultsEvent = { byReference: boolean; input: string; results: Item[]; scrollTop: boolean; title: string }
type SearchRetryEvent = undefined
type SearchStartEvent = { origin: SearchOrigin; scrollTop?: boolean; str: string }
type SelectResultEvent = string // the id of the selected item
