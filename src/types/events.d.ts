type AppFormData = { formValid: boolean } & Record<string, AppFormDataValue>
type AppFormDataValue = string | boolean | number | string[]
type AppFormEditItemSaveEvent = Item
type AppFormEditItemSetEvent = Item
type AppFormEditItemSuggestionsEvent = FormSuggestions
type AppFormSettingsErrorEvent = string
type AppFormSettingsSaveEvent = AppSettings
type AppFormSettingsSetEvent = AppSettings
type AppLoaderToggleEvent = boolean
type AppModalAddItemOpenEvent = HTMLElement
type AppPrompterTypeEvent = TypicalArguments
type AppSearchItemEvent = AppFormData
type AppSettingsTriggerAnimateEvent = boolean
type AppStatus = 'loading' | 'ready' | 'failed' | 'listening' | 'settings-required'
type AppStatusEvent = AppStatus
type AppToasterShowEvent = { type: 'error' | 'success' | 'info'; message: string; delay?: number }
type BarcodesToPrintEvent = Item[]
type EditItemEvent = Item
type FormEditFormData = Item & AppFormData
type FormIdErrorEvent = string
type FormIdSetEvent = AppFormData
type FormIdSuggestionsEvent = FormSuggestions
type FormOnSaveEvent = AppFormData
type FormSuggestions = Record<string, string[]>
type PrintOneEvent = string // the id of the item to print
type PrintOneFormData = { size: PrintSize } & AppFormData
type PrintOneInputData = Omit<Item, 'id' | 'category' | 'photo' | 'price' | 'ref-printed' | 'status' | 'updated-on'>
type PrintOneSubmitEvent = PrintData
type PrintSize = '40x30'
type RecognitionErrorEvent = { error: string }
type RecognitionResult = { confidence: number; transcript: string }
type RecognitionResultEvent = { results: RecognitionResult[][] }
type SearchOrigin = 'default' | 'type' | 'scan' | 'search-results' | 'speech' | 'url'
type SearchResultEvent = { byReference: boolean; input: string; results: SearchResult[]; scrollTop: boolean; title: string }
type SearchStartEvent = { origin: SearchOrigin; scrollTop?: boolean; str: string }
type SelectResultEvent = string // the id of the selected item
